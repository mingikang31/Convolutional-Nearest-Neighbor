training: False
_parameters: {}
_buffers: {}
_non_persistent_buffers_set: set()
_backward_pre_hooks: OrderedDict()
_backward_hooks: OrderedDict()
_is_full_backward_hook: None
_forward_hooks: OrderedDict()
_forward_hooks_with_kwargs: OrderedDict()
_forward_hooks_always_called: OrderedDict()
_forward_pre_hooks: OrderedDict()
_forward_pre_hooks_with_kwargs: OrderedDict()
_state_dict_hooks: OrderedDict()
_state_dict_pre_hooks: OrderedDict()
_load_state_dict_pre_hooks: OrderedDict()
_load_state_dict_post_hooks: OrderedDict()
_modules: {'features': Sequential(
  (0): Conv2d_NN_sanity(
    (shuffle_layer): PixelShuffle(upscale_factor=2)
    (unshuffle_layer): PixelUnshuffle(downscale_factor=2)
    (conv1d_layer): Conv1d(3, 64, kernel_size=(9,), stride=(9,), bias=False)
    (flatten): Flatten(start_dim=2, end_dim=-1)
    (unflatten): Unflatten(dim=2, unflattened_size=torch.Size([34, 34]))
  )
  (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (2): ReLU(inplace=True)
  (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
  (4): Conv2d_NN_sanity(
    (shuffle_layer): PixelShuffle(upscale_factor=2)
    (unshuffle_layer): PixelUnshuffle(downscale_factor=2)
    (conv1d_layer): Conv1d(64, 128, kernel_size=(9,), stride=(9,), bias=False)
    (flatten): Flatten(start_dim=2, end_dim=-1)
    (unflatten): Unflatten(dim=2, unflattened_size=torch.Size([19, 19]))
  )
  (5): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (6): ReLU(inplace=True)
  (7): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
  (8): Conv2d_NN_sanity(
    (shuffle_layer): PixelShuffle(upscale_factor=2)
    (unshuffle_layer): PixelUnshuffle(downscale_factor=2)
    (conv1d_layer): Conv1d(128, 256, kernel_size=(9,), stride=(9,), bias=False)
    (flatten): Flatten(start_dim=2, end_dim=-1)
    (unflatten): Unflatten(dim=2, unflattened_size=torch.Size([11, 11]))
  )
  (9): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (10): ReLU(inplace=True)
  (11): Conv2d_NN_sanity(
    (shuffle_layer): PixelShuffle(upscale_factor=2)
    (unshuffle_layer): PixelUnshuffle(downscale_factor=2)
    (conv1d_layer): Conv1d(256, 256, kernel_size=(9,), stride=(9,), bias=False)
    (flatten): Flatten(start_dim=2, end_dim=-1)
    (unflatten): Unflatten(dim=2, unflattened_size=torch.Size([13, 13]))
  )
  (12): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (13): ReLU(inplace=True)
  (14): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
  (15): Conv2d_NN_sanity(
    (shuffle_layer): PixelShuffle(upscale_factor=2)
    (unshuffle_layer): PixelUnshuffle(downscale_factor=2)
    (conv1d_layer): Conv1d(256, 512, kernel_size=(9,), stride=(9,), bias=False)
    (flatten): Flatten(start_dim=2, end_dim=-1)
    (unflatten): Unflatten(dim=2, unflattened_size=torch.Size([8, 8]))
  )
  (16): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (17): ReLU(inplace=True)
  (18): Conv2d_NN_sanity(
    (shuffle_layer): PixelShuffle(upscale_factor=2)
    (unshuffle_layer): PixelUnshuffle(downscale_factor=2)
    (conv1d_layer): Conv1d(512, 512, kernel_size=(9,), stride=(9,), bias=False)
    (flatten): Flatten(start_dim=2, end_dim=-1)
    (unflatten): Unflatten(dim=2, unflattened_size=torch.Size([10, 10]))
  )
  (19): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (20): ReLU(inplace=True)
  (21): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
  (22): Conv2d_NN_sanity(
    (shuffle_layer): PixelShuffle(upscale_factor=2)
    (unshuffle_layer): PixelUnshuffle(downscale_factor=2)
    (conv1d_layer): Conv1d(512, 512, kernel_size=(9,), stride=(9,), bias=False)
    (flatten): Flatten(start_dim=2, end_dim=-1)
    (unflatten): Unflatten(dim=2, unflattened_size=torch.Size([7, 7]))
  )
  (23): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (24): ReLU(inplace=True)
  (25): Conv2d_NN_sanity(
    (shuffle_layer): PixelShuffle(upscale_factor=2)
    (unshuffle_layer): PixelUnshuffle(downscale_factor=2)
    (conv1d_layer): Conv1d(512, 512, kernel_size=(9,), stride=(9,), bias=False)
    (flatten): Flatten(start_dim=2, end_dim=-1)
    (unflatten): Unflatten(dim=2, unflattened_size=torch.Size([9, 9]))
  )
  (26): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (27): ReLU(inplace=True)
  (28): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
), 'avgpool': AdaptiveAvgPool2d(output_size=(7, 7)), 'classifier': Sequential(
  (0): Linear(in_features=25088, out_features=4096, bias=True)
  (1): ReLU(inplace=True)
  (2): Dropout(p=0.5, inplace=False)
  (3): Linear(in_features=4096, out_features=4096, bias=True)
  (4): ReLU(inplace=True)
  (5): Dropout(p=0.5, inplace=False)
  (6): Linear(in_features=4096, out_features=10, bias=True)
)}
args: Namespace(layer='ConvNN', K=9, kernel_size=3, padding=1, sampling_type='all', num_samples=-1, sample_padding=0, attention_dropout=0.1, shuffle_pattern='BA', shuffle_scale=2, magnitude_type='similarity', coordinate_encoding=True, dataset='cifar10', data_path='./Data', batch_size=64, num_epochs=50, use_amp=False, clip_grad_norm=None, criterion='CrossEntropy', optimizer='adamw', momentum=0.9, weight_decay=1e-06, lr=0.001, lr_step=2, lr_gamma=0.95, scheduler='step', device='cuda', seed=0, output_dir='./Output/Sep_8/vgg/Distance/1e_3/ConvNN_All_K9_0_p1', resize=False, num_classes=10, img_size=(3, 32, 32), total_params=128810058, trainable_params=128810058)
name: VGG A ConvNN
