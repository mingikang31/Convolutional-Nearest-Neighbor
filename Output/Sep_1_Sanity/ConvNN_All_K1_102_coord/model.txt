training: False
_parameters: {}
_buffers: {}
_non_persistent_buffers_set: set()
_backward_pre_hooks: OrderedDict()
_backward_hooks: OrderedDict()
_is_full_backward_hook: None
_forward_hooks: OrderedDict()
_forward_hooks_with_kwargs: OrderedDict()
_forward_hooks_always_called: OrderedDict()
_forward_pre_hooks: OrderedDict()
_forward_pre_hooks_with_kwargs: OrderedDict()
_state_dict_hooks: OrderedDict()
_state_dict_pre_hooks: OrderedDict()
_load_state_dict_pre_hooks: OrderedDict()
_load_state_dict_post_hooks: OrderedDict()
_modules: {'features': Sequential(
  (0): InstanceNorm2d(32, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
  (1): Conv2d_NN_sanity(
    (shuffle_layer): PixelShuffle(upscale_factor=2)
    (unshuffle_layer): PixelUnshuffle(downscale_factor=2)
    (conv1d_layer): Conv1d(5, 32, kernel_size=(1,), stride=(1,))
    (flatten): Flatten(start_dim=2, end_dim=-1)
    (unflatten): Unflatten(dim=2, unflattened_size=torch.Size([32, 32]))
  )
  (2): ReLU(inplace=True)
  (3): InstanceNorm2d(16, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
  (4): Conv2d_NN_sanity(
    (shuffle_layer): PixelShuffle(upscale_factor=2)
    (unshuffle_layer): PixelUnshuffle(downscale_factor=2)
    (conv1d_layer): Conv1d(34, 16, kernel_size=(1,), stride=(1,))
    (flatten): Flatten(start_dim=2, end_dim=-1)
    (unflatten): Unflatten(dim=2, unflattened_size=torch.Size([32, 32]))
  )
  (5): ReLU(inplace=True)
  (6): InstanceNorm2d(8, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
  (7): Conv2d_NN_sanity(
    (shuffle_layer): PixelShuffle(upscale_factor=2)
    (unshuffle_layer): PixelUnshuffle(downscale_factor=2)
    (conv1d_layer): Conv1d(18, 8, kernel_size=(1,), stride=(1,))
    (flatten): Flatten(start_dim=2, end_dim=-1)
    (unflatten): Unflatten(dim=2, unflattened_size=torch.Size([32, 32]))
  )
  (8): ReLU(inplace=True)
), 'pool': AdaptiveAvgPool2d(output_size=(1, 1)), 'flatten': Flatten(start_dim=1, end_dim=-1), 'classifier': Sequential(
  (0): Dropout(p=0.1, inplace=False)
  (1): Linear(in_features=8, out_features=10, bias=True)
)}
args: Namespace(layer='ConvNN', num_layers=3, channels=[32, 16, 8], K=1, kernel_size=3, padding=0, sampling_type='all', num_samples=-1, sample_padding=0, num_heads=4, attention_dropout=0.1, shuffle_pattern='NA', shuffle_scale=2, magnitude_type='similarity', coordinate_encoding=True, dataset='cifar10', data_path='./Data', batch_size=64, num_epochs=75, use_amp=False, clip_grad_norm=None, criterion='CrossEntropy', optimizer='adamw', momentum=0.9, weight_decay=1e-06, lr=0.001, lr_step=20, lr_gamma=0.1, scheduler='step', device='cuda', seed=102, output_dir='./Output/Sep_1_Sanity/ConvNN_All_K1_102_coord', resize=False, num_classes=10, img_size=(3, 32, 32), total_params=994, trainable_params=994)
model: All Convolutional Network
name: All Convolutional Network ConvNN
