training: False
_parameters: {}
_buffers: {}
_non_persistent_buffers_set: set()
_backward_pre_hooks: OrderedDict()
_backward_hooks: OrderedDict()
_is_full_backward_hook: None
_forward_hooks: OrderedDict()
_forward_hooks_with_kwargs: OrderedDict()
_forward_hooks_always_called: OrderedDict()
_forward_pre_hooks: OrderedDict()
_forward_pre_hooks_with_kwargs: OrderedDict()
_state_dict_hooks: OrderedDict()
_state_dict_pre_hooks: OrderedDict()
_load_state_dict_pre_hooks: OrderedDict()
_load_state_dict_post_hooks: OrderedDict()
_modules: {'features': Sequential(
  (0): Conv2d_NN(
    (shuffle_layer): PixelShuffle(upscale_factor=0)
    (unshuffle_layer): PixelUnshuffle(downscale_factor=0)
    (conv1d_layer): Conv1d(3, 64, kernel_size=(9,), stride=(9,))
    (flatten): Flatten(start_dim=2, end_dim=-1)
    (unflatten): Unflatten(dim=2, unflattened_size=torch.Size([32, 32]))
  )
  (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (2): ReLU(inplace=True)
  (3): Conv2d_NN(
    (shuffle_layer): PixelShuffle(upscale_factor=0)
    (unshuffle_layer): PixelUnshuffle(downscale_factor=0)
    (conv1d_layer): Conv1d(64, 64, kernel_size=(9,), stride=(9,))
    (flatten): Flatten(start_dim=2, end_dim=-1)
    (unflatten): Unflatten(dim=2, unflattened_size=torch.Size([32, 32]))
  )
  (4): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (5): ReLU(inplace=True)
  (6): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
  (7): Conv2d_NN(
    (shuffle_layer): PixelShuffle(upscale_factor=0)
    (unshuffle_layer): PixelUnshuffle(downscale_factor=0)
    (conv1d_layer): Conv1d(64, 128, kernel_size=(9,), stride=(9,))
    (flatten): Flatten(start_dim=2, end_dim=-1)
    (unflatten): Unflatten(dim=2, unflattened_size=torch.Size([16, 16]))
  )
  (8): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (9): ReLU(inplace=True)
  (10): Conv2d_NN(
    (shuffle_layer): PixelShuffle(upscale_factor=0)
    (unshuffle_layer): PixelUnshuffle(downscale_factor=0)
    (conv1d_layer): Conv1d(128, 128, kernel_size=(9,), stride=(9,))
    (flatten): Flatten(start_dim=2, end_dim=-1)
    (unflatten): Unflatten(dim=2, unflattened_size=torch.Size([16, 16]))
  )
  (11): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (12): ReLU(inplace=True)
  (13): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
  (14): Conv2d_NN(
    (shuffle_layer): PixelShuffle(upscale_factor=0)
    (unshuffle_layer): PixelUnshuffle(downscale_factor=0)
    (conv1d_layer): Conv1d(128, 256, kernel_size=(9,), stride=(9,))
    (flatten): Flatten(start_dim=2, end_dim=-1)
    (unflatten): Unflatten(dim=2, unflattened_size=torch.Size([8, 8]))
  )
  (15): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (16): ReLU(inplace=True)
  (17): Conv2d_NN(
    (shuffle_layer): PixelShuffle(upscale_factor=0)
    (unshuffle_layer): PixelUnshuffle(downscale_factor=0)
    (conv1d_layer): Conv1d(256, 256, kernel_size=(9,), stride=(9,))
    (flatten): Flatten(start_dim=2, end_dim=-1)
    (unflatten): Unflatten(dim=2, unflattened_size=torch.Size([8, 8]))
  )
  (18): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (19): ReLU(inplace=True)
  (20): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
  (21): Conv2d_NN(
    (shuffle_layer): PixelShuffle(upscale_factor=0)
    (unshuffle_layer): PixelUnshuffle(downscale_factor=0)
    (conv1d_layer): Conv1d(256, 512, kernel_size=(9,), stride=(9,))
    (flatten): Flatten(start_dim=2, end_dim=-1)
    (unflatten): Unflatten(dim=2, unflattened_size=torch.Size([4, 4]))
  )
  (22): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (23): ReLU(inplace=True)
  (24): Conv2d_NN(
    (shuffle_layer): PixelShuffle(upscale_factor=0)
    (unshuffle_layer): PixelUnshuffle(downscale_factor=0)
    (conv1d_layer): Conv1d(512, 512, kernel_size=(9,), stride=(9,))
    (flatten): Flatten(start_dim=2, end_dim=-1)
    (unflatten): Unflatten(dim=2, unflattened_size=torch.Size([4, 4]))
  )
  (25): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (26): ReLU(inplace=True)
  (27): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
  (28): Conv2d_NN(
    (shuffle_layer): PixelShuffle(upscale_factor=0)
    (unshuffle_layer): PixelUnshuffle(downscale_factor=0)
    (conv1d_layer): Conv1d(512, 512, kernel_size=(9,), stride=(9,))
    (flatten): Flatten(start_dim=2, end_dim=-1)
    (unflatten): Unflatten(dim=2, unflattened_size=torch.Size([2, 2]))
  )
  (29): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (30): ReLU(inplace=True)
  (31): Conv2d_NN(
    (shuffle_layer): PixelShuffle(upscale_factor=0)
    (unshuffle_layer): PixelUnshuffle(downscale_factor=0)
    (conv1d_layer): Conv1d(512, 512, kernel_size=(9,), stride=(9,))
    (flatten): Flatten(start_dim=2, end_dim=-1)
    (unflatten): Unflatten(dim=2, unflattened_size=torch.Size([2, 2]))
  )
  (32): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (33): ReLU(inplace=True)
  (34): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
), 'avgpool': AdaptiveAvgPool2d(output_size=(7, 7)), 'classifier': Sequential(
  (0): Linear(in_features=25088, out_features=4096, bias=True)
  (1): ReLU(inplace=True)
  (2): Dropout(p=0.5, inplace=False)
  (3): Linear(in_features=4096, out_features=4096, bias=True)
  (4): ReLU(inplace=True)
  (5): Dropout(p=0.5, inplace=False)
  (6): Linear(in_features=4096, out_features=10, bias=True)
)}
args: Namespace(model='vgg13', layer='ConvNN', K=9, kernel_size=3, padding=1, sampling_type='spatial', num_samples=6, sample_padding=0, attention_dropout=0.1, shuffle_pattern='NA', shuffle_scale=0, magnitude_type='cosine', similarity_type='Col', aggregation_type='Col', lambda_param=0.5, branch_ratio=0.5, dataset='cifar10', noise=0.0, data_path='./Data', batch_size=128, num_epochs=200, use_amp=False, clip_grad_norm=None, criterion='CrossEntropy', optimizer='adamw', momentum=0.9, weight_decay=0.01, lr=0.001, lr_step=20, lr_gamma=0.1, scheduler='cosine', device='cuda', seed=42, output_dir='./Output/CIFAR10/VGG13/ConvNN_Spatial_K9_N6_s42', test_only=False, resize=False, num_classes=10, img_size=(3, 32, 32), total_params=128997706, trainable_params=128997706)
name: vgg13 - ConvNN
